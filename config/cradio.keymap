/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define SYM 1
#define NAV 2
#define NUM 3
#define FUN 4
#define SETTINGS 5
// -----------------

#define HL(k1,k2,k3,k4) &hml LGUI  k1 &hml LALT  k2 &hml LCTRL k3 &hml LSHFT k4
#define HR(k1,k2,k3,k4) &hmr RSHFT k1 &hmr RCTRL k2 &hmr RALT  k3 &hmr RGUI  k4

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33

/ {
    behaviors {
        // See https://github.com/urob/zmk-config#timeless-homerow-mods
        hml: hml {
            label = "ZM_hml";
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
        hmr: hmr {
            label = "ZM_hmr";
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
    };
    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.
        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };
    combos {
        compatible = "zmk,combos";
        // Press all the left home keys to unstick modifiers.
        combo_unstick {
            timeout-ms = <100>;
            key-positions = <10 11 12 13>;
            bindings = <&unstick>;
        };
        // Both left keys
        combo_left_thumb {
            timeout-ms = <500>;
            key-positions = <30 31>;
            bindings = <&lt SETTINGS ESC>;
        };
        // Both right keys
        combo_right_thumb {
            timeout-ms = <500>;
            key-positions = <32 33>;
            bindings = <&sk LSHFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer
        default_layer {
            bindings = <
            &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
            HL( A,          S,          D,          F)      &kp G           &kp H        HR(J,          K,          L,          SEMI)
            &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp ESC
                                        &lt FUN TAB &lt NAV SPACE           &lt SYM ENTER  &lt NUM BSPC
            >;
        };

        // Symbols
        sym_layer {
            bindings = <
            &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp ASTRK   &kp PIPE    &kp QMARK
            HL( GRAVE,      LT,         LBKT,       LPAR)   &kp LBRC        &kp FSLH    HR( MINUS,      EQUAL,      DQT,        SEMI)
            &kp TILDE   &kp GT      &kp RBKT    &kp RPAR    &kp RBRC        &kp BSLH    &kp UNDER   &kp PLUS    &kp SQT     &kp COLON
                                                &kp TAB     &kp SPACE       &kp ENTER   &kp BSPC
            >;
        };

        // Navigation
        nav_layer {
            bindings = <
            &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(Y)       &kp LC(D)   &caps_word  &none       &none       &none
            &kp HOME    &kp LEFT    &kp UP      &kp RIGHT   &kp PG_UP       &kp LC(BSPC)&kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            &kp END     &kp LC(LEFT)&kp DOWN    &kp LC(RIGHT)&kp PG_DN      &kp DEL     &kp LC(DEL) &kp SPACE   &none       &kp ESC
                                                &kp TAB     &kp SPACE       &kp ENTER   &kp BSPC
            >;
        };

        // Numbers
        num_layer {
            bindings = <
            &kp FSLH    &kp N7      &kp N8      &kp N9      &kp MINUS       &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(Y)
            &kp N0      &kp N4      &kp N5      &kp N6      &kp PLUS        &kp BSPC    &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            &kp ASTRK   &kp N1      &kp N2      &kp N3      &kp DOT         &kp DEL     &kp UNDER   &kp COMMA   &kp ENTER   &kp ESC
                                                &kp TAB     &kp SPACE       &kp ENTER   &kp BSPC
            >;
        };

        // Function keys and media
        fun_layer {
            bindings = <
            &kp F12     &kp F7      &kp F8      &kp F9      &kp PSCRN       &none       &kp C_VOL_DN &kp C_MUTE  &kp C_VOL_UP &none
            &kp F11     &kp F4      &kp F5      &kp F6      &none           &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
            &kp F10     &kp F1      &kp F2      &kp F3      &none           &kp DEL     &none       &none       &none       &kp ESC
                                                &kp TAB     &kp SPACE       &kp ENTER   &kp BSPC
            >;
        };

        // Used to change the keyboard's settings.
        settings_layer {
            bindings = <
            &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &sys_reset  &kp LS(LC(LA(LEFT))) &kp LS(LC(LA(DOWN))) &kp LS(LC(LA(UP))) &kp LS(LC(LA(RIGHT)))
            &kp C_SLEEP  &kp C_PWR    &none        &none        &out OUT_USB    &bootloader &kp LC(LA(LEFT)) &kp LC(LA(DOWN)) &kp LC(LA(UP)) &kp LC(LA(RIGHT))
            &sys_reset   &bootloader  &bt BT_CLR   &unstick     &out OUT_BLE    &none       &kp LG(LEFT) &kp LG(DOWN) &kp LG(UP) &kp LG(RIGHT)
                                                   &none        &none           &kp N9      &none
            >;
        };
    };
};
